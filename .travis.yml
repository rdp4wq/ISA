language: python

python:
  - "3.5"

sudo: required
dist: trusty # google-cloud-engine mod of ubuntu 14.04.3 LTS

# if specific versions of docker or docker-compose are needed, see travis-CI docs
services:
  - docker # default is docker 1.8.2 and docker-compose 1.4.2 (as of Oct. 2016)

install: # prepare mySQL database
  - docker pull mysql:5.7.14
  - mkdir db
  - >
    docker run --name mysql -d -e MYSQL_ROOT_PASSWORD='$3cureUS'
    -v `pwd`/db:/var/lib/mysql mysql:5.7.14
  - sleep 10 # need to give time for mysql to start
  - >
    docker run -it --name mysql-cmd --rm --link mysql:db mysql:5.7.14
    mysql -uroot -p'$3cureUS' -h db -v -e
    "CREATE DATABASE cs4501 CHARACTER SET utf8;
    CREATE DATABASE test_cs4501 CHARACTER SET utf8;
    CREATE USER 'www'@'%' IDENTIFIED BY '\$3cureUS';
    GRANT ALL PRIVILEGES ON *.* TO 'www'@'%';"

before_script:
  - docker-compose up -d
  - docker ps -a

script:
  - >
    docker exec -it sugar-entities bash -c     # 'models' is the name of the docker container
    "pip install -r requirements.txt &&
    python manage.py test --noinput" # run Django unit tests on models
  # can put other tests (e.g. integrations) here too with exp, web containers

after_script:
  - docker-compose stop
  - docker stop mysql
  - docker rm `docker ps -a -q`
  - docker rmi `docker images -q`
  - rm -rf db



#language: python
#
#python:
#  - "3.5"
#
#sudo: required
#
#services:
#  - docker
#
#env:
#  # You may want to update this to whatever the latest version is, or keep it
#  # the same as your local machines. However, I have only tested it with 1.8.0+.
#  # There should be a time in the future when this is not necessary - it is
#  # explained in more detail below.
#  DOCKER_COMPOSE_VERSION: 1.8.0
#
#before_install:
#  # update is required to update the repositories to see the new packages for
#  # Docker.
#  - sudo apt-get update
#
#  # Now we can install the newer docker-engine which is required for the newer
#  # docker-composer we will install next. The messy options are to force it to
#  # be non-interactive (normally it asks you a bunch of config questions).
#  - sudo apt-get install -o Dpkg::Options::="--force-confold" --force-yes -y docker-engine
#
#  # As of the writing of this script Travis has docker-compose v1.4.2, we need
#  # to update it to 1.8+. $DOCKER_COMPOSE_VERSION is provide from the `env`
#  # above.
#  - sudo rm /usr/local/bin/docker-compose
#  - curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-`uname -s`-`uname -m` > docker-compose
#  - chmod +x docker-compose
#  - sudo mv docker-compose /usr/local/bin
#
#  # Check that docker-compose is now running the latest version (or at least the
#  # one we specified). This is not to be confused with the version we printed
#  # before doing the update.
#  - docker-compose --version
#
## command to install dependencies
#install:
#  - pip install -r requirements.txt
#
#before_script:
#  - docker-compose up
#
#  # You will want this for logging. If one of your containers does not build for
#  # whatever reason it's best to report that now before your tests start
#  # otherwise it can be really tricky to debug why tests are failing sometimes.
#  - docker ps -a
#  - docker exec -it entities_services bash
#
## command to run tests
#script:
#  - cd entities
#  - python manage.py test